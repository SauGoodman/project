import json
import logging
import awswrangler as wr
import requests
import pandas as pd
import boto3
from botocore.exceptions import ClientError

# ログ設定
logger = logging.getLogger()
logger.setLevel(logging.INFO)

# DynamoDB 設定
dynamodb = boto3.resource('dynamodb')
table_name = "RequestCount"  # DynamoDBのテーブル名
request_count_table = dynamodb.Table(table_name)

# APIトークンとヘッダの設定
token = "YOUR_API_TOKEN"
headers = {
    "User-Agent": "test-agent",
    "Authorization": token,
    "ClientId": "75"
}

def sanitize_value(value, default="default_value"):
    """値をクリーニングし、欠損値をデフォルト値に置き換える"""
    if pd.isna(value) or value == "":
        return default
    return str(value)

def update_request_count(request_type, count):
    try:
        request_count_table.update_item(
            Key={'RequestType': request_type},
            UpdateExpression="SET RecordCount = :count",
            ExpressionAttributeValues={':count': count},
            ReturnValues="UPDATED_NEW"
        )
    except ClientError as e:
        logger.error(f"DynamoDB更新エラー: {e}")

def get_last_processed_count(request_type):
    try:
        response = request_count_table.get_item(Key={'RequestType': request_type})
        return int(response['Item']['RecordCount']) if 'Item' in response else 0
    except Exception as e:
        logger.error(f"DynamoDB取得エラー: {e}")
        return 0

def lambda_handler(event, context):
    try:
        bucket_name = "mastergpoc"
        input_file_key = "results/01_product_apipost.csv"
        df = wr.s3.read_csv(f's3://{bucket_name}/{input_file_key}', dtype=str, keep_default_na=False)

        last_post_count = get_last_processed_count("POST")
        post_df = df[df["request_type"] == "POST"].iloc[last_post_count:]

        if not post_df.empty:
            logger.info(f"処理中のPOSTデータ: {len(post_df)} 件")
            update_request_count("POST", last_post_count + len(post_df))

        return {"statusCode": 200, "body": "処理が正常に完了しました"}
    except Exception as e:
        logger.error(f"エラーが発生しました: {e}")
        return {"statusCode": 500, "body": f"エラー: {e}"}