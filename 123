import boto3
import logging
import awswrangler as wr
import os

# --- ログ設定 ---
logger = logging.getLogger()
logger.setLevel(logging.INFO)

# --- S3 設定 ---
s3_client = boto3.client("s3")
BUCKET_NAME = "mastergpoc"

# --- DynamoDB 設定 ---
dynamodb = boto3.resource("dynamodb")
table_name = "RequestCount"
request_count_table = dynamodb.Table(table_name)

# --- S3上のファイル処理 ---
def delete_s3_file(bucket, key):
    """S3からファイルを削除"""
    try:
        s3_client.delete_object(Bucket=bucket, Key=key)
        logger.info(f"S3ファイル削除成功: {bucket}/{key}")
    except Exception as e:
        logger.error(f"S3ファイル削除エラー: {e}")

def rename_s3_file(bucket, old_key, new_key):
    """S3ファイル名を変更"""
    try:
        s3_client.copy_object(
            Bucket=bucket, 
            CopySource={"Bucket": bucket, "Key": old_key}, 
            Key=new_key
        )
        delete_s3_file(bucket, old_key)
        logger.info(f"S3ファイル名変更成功: {old_key} -> {new_key}")
    except Exception as e:
        logger.error(f"S3ファイル名変更エラー: {e}")

def clear_dynamodb():
    """DynamoDBのレコードを削除"""
    try:
        scan = request_count_table.scan()
        with request_count_table.batch_writer() as batch:
            for item in scan["Items"]:
                batch.delete_item(Key={"FunctionType": item["FunctionType"]})
        logger.info("DynamoDBレコード削除成功")
    except Exception as e:
        logger.error(f"DynamoDBレコード削除エラー: {e}")

# --- BackupFile処理 ---
def backup_file():
    try:
        # 1. input/01_product_old.csv を削除
        delete_s3_file(BUCKET_NAME, "input/01_product_old.csv")
        
        # 2. input/01_product_new.csv を input/01_product_old.csv にリネーム
        rename_s3_file(BUCKET_NAME, "input/01_product_new.csv", "input/01_product_old.csv")
        
        # 3. temp/01_product_compare.csv を削除
        delete_s3_file(BUCKET_NAME, "temp/01_product_compare.csv")
        
        # 4. result/01_product_apipost.csv と result/01_product_apiput.csv を削除
        delete_s3_file(BUCKET_NAME, "result/01_product_apipost.csv")
        delete_s3_file(BUCKET_NAME, "result/01_product_apiput.csv")
        
        # 5. DynamoDB のレコードを削除
        clear_dynamodb()
        
        logger.info("backupFileの処理が正常に完了しました")
    except Exception as e:
        logger.error(f"backupFileの処理中にエラーが発生しました: {e}")

# --- メイン処理 ---
if __name__ == "__main__":
    backup_file()