# --- POSTデータを処理 ---
def process_post_data(post_df):
    """POSTリクエストを処理"""
    for i in range(0, len(post_df), BATCH_SIZE):
        batch_df = post_df.iloc[i:i + BATCH_SIZE]
        payload = {
            "products": [
                {
                    "category_id": row.get("category_id", "j3d7jC000021623"),
                    "com_product_id": row.get("buturyu_cd", ""),
                    "product_name": row.get("seihin_rkj", ""),
                    "product_text": "",
                    "product_status": "1",
                    "edit_status": "1",
                    "client_read_auth": "",
                    "client_write_auth": "",
                    "view_auth_group": "j3d7j_base",
                    "edit_auth_group": "j3d7j_base",
                    "basic": [
                        {"id": "j3d7jE0000289845", "key": "正式商品名", "value": row.get("seisiki_syohin_nm", "")},
                        {"id": "j3d7jE0000289846", "key": "正式商品名備考", "value": row.get("seisiki_syohin_obn", "")},
                        {"id": "j3d7jE0000289847", "key": "製品名称", "value": row.get("seihin_kj", "")},
                        {"id": "j3d7jE0000289853", "key": "希望小売価格", "value": row.get("kibou_kouri_pr", "")}
                    ]
                }
                for _, row in batch_df.iterrows()
            ]
        }
        try:
            response = requests.post(API_URL, headers=headers, json=payload)
            logger.info(f"POST結果: {response.status_code}, 内容: {response.json()}")
        except Exception as e:
            logger.error(f"POSTエラー: {e}")
        sleep(1)